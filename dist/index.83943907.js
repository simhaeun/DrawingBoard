class DrawingBoard{MODE="NONE";IsMouseDown=!1;constructor(){this.assingElement(),this.initContext(),this.addEvent()}assingElement(){this.containerEl=document.getElementById("container"),this.canvasEl=this.containerEl.querySelector("#canvas"),this.toolbarEl=this.containerEl.querySelector("#toolbar"),this.brushEl=this.toolbarEl.querySelector("#brush"),this.colorPickerEl=this.toolbarEl.querySelector("#colorPicker"),this.brushPanelEl=this.containerEl.querySelector("#brushPanel"),this.brushSliderEl=this.brushPanelEl.querySelector("#brushSize"),this.brushSizePreviewEl=this.brushPanelEl.querySelector("#brushSizePreview")}initContext(){this.context=this.canvasEl.getContext("2d")}addEvent(){this.brushEl.addEventListener("click",this.onClickBrush.bind(this)),this.canvasEl.addEventListener("mousedown",this.onMouseDown.bind(this)),this.canvasEl.addEventListener("mousemove",this.onMouseMove.bind(this)),this.canvasEl.addEventListener("mouseup",this.onMouseUp.bind(this)),this.canvasEl.addEventListener("mouseout",this.onMouseOut.bind(this)),this.brushSliderEl.addEventListener("input",this.onChangeBrushSize.bind(this)),this.colorPickerEl.addEventListener("input",this.onChangeColor.bind(this))}onMouseOut(){"NONE"!==this.MODE&&(this.IsMouseDown=!1)}onChangeColor(t){this.brushSizePreviewEl.style.background=t.target.value}onChangeBrushSize(t){this.brushSizePreviewEl.style.width=`${t.target.value}px`,this.brushSizePreviewEl.style.height=`${t.target.value}px`}onMouseDown(t){if("NONE"===this.MODE)return;this.IsMouseDown=!0;const e=this.getMousePosition(t);this.context.beginPath(),this.context.moveTo(e.x,e.y),this.context.lineCap="round",this.context.strokeStyle=this.colorPickerEl.value,this.context.lineWidth=this.brushSliderEl.value}onMouseMove(t){if(!this.IsMouseDown)return;const e=this.getMousePosition(t);this.context.lineTo(e.x,e.y),this.context.stroke()}onMouseUp(t){"NONE"!==this.MODE&&(this.IsMouseDown=!1)}getMousePosition(t){const e=this.canvasEl.getBoundingClientRect();return{x:t.clientX-e.left,y:t.clientY-e.top}}onClickBrush(t){const e=t.currentTarget.classList.contains("active");this.MODE=e?"NONE":"BRUSH",this.canvasEl.style.cursor=e?"default":"crosshair",this.brushPanelEl.classList.toggle("hide"),this.brushEl.classList.toggle("active")}}new DrawingBoard;
//# sourceMappingURL=index.83943907.js.map
